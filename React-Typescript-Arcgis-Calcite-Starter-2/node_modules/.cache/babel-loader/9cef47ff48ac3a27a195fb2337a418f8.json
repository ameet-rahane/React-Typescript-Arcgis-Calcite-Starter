{"ast":null,"code":"var __awaiter = this && this.__awaiter || function (thisArg, _arguments, P, generator) {\n  function adopt(value) {\n    return value instanceof P ? value : new P(function (resolve) {\n      resolve(value);\n    });\n  }\n\n  return new (P || (P = Promise))(function (resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function rejected(value) {\n      try {\n        step(generator[\"throw\"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function step(result) {\n      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n    }\n\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n};\n\nvar __rest = this && this.__rest || function (s, e) {\n  var t = {};\n\n  for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\n\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport { attachProps } from './utils';\nexport const createOverlayComponent = (displayName, controller) => {\n  const didDismissEventName = `on${displayName}DidDismiss`;\n  const didPresentEventName = `on${displayName}DidPresent`;\n  const willDismissEventName = `on${displayName}WillDismiss`;\n  const willPresentEventName = `on${displayName}WillPresent`;\n\n  class Overlay extends React.Component {\n    constructor(props) {\n      super(props);\n      this.el = document.createElement('div');\n      this.handleDismiss = this.handleDismiss.bind(this);\n    }\n\n    static get displayName() {\n      return displayName;\n    }\n\n    componentDidMount() {\n      if (this.props.isOpen) {\n        this.present();\n      }\n    }\n\n    componentWillUnmount() {\n      if (this.overlay) {\n        this.overlay.dismiss();\n      }\n    }\n\n    handleDismiss(event) {\n      if (this.props.onDidDismiss) {\n        this.props.onDidDismiss(event);\n      }\n\n      if (this.props.forwardedRef) {\n        this.props.forwardedRef.current = undefined;\n      }\n    }\n\n    componentDidUpdate(prevProps) {\n      return __awaiter(this, void 0, void 0, function* () {\n        if (this.overlay) {\n          attachProps(this.overlay, this.props, prevProps);\n        }\n\n        if (prevProps.isOpen !== this.props.isOpen && this.props.isOpen === true) {\n          this.present(prevProps);\n        }\n\n        if (this.overlay && prevProps.isOpen !== this.props.isOpen && this.props.isOpen === false) {\n          yield this.overlay.dismiss();\n        }\n      });\n    }\n\n    present(prevProps) {\n      return __awaiter(this, void 0, void 0, function* () {\n        const _a = this.props,\n              {\n          children,\n          isOpen,\n          onDidDismiss,\n          onDidPresent,\n          onWillDismiss,\n          onWillPresent\n        } = _a,\n              cProps = __rest(_a, [\"children\", \"isOpen\", \"onDidDismiss\", \"onDidPresent\", \"onWillDismiss\", \"onWillPresent\"]);\n\n        const elementProps = Object.assign(Object.assign({}, cProps), {\n          ref: this.props.forwardedRef,\n          [didDismissEventName]: this.handleDismiss,\n          [didPresentEventName]: e => this.props.onDidPresent && this.props.onDidPresent(e),\n          [willDismissEventName]: e => this.props.onWillDismiss && this.props.onWillDismiss(e),\n          [willPresentEventName]: e => this.props.onWillPresent && this.props.onWillPresent(e)\n        });\n        this.overlay = yield controller.create(Object.assign(Object.assign({}, elementProps), {\n          component: this.el,\n          componentProps: {}\n        }));\n\n        if (this.props.forwardedRef) {\n          this.props.forwardedRef.current = this.overlay;\n        }\n\n        attachProps(this.overlay, elementProps, prevProps);\n        yield this.overlay.present();\n      });\n    }\n\n    render() {\n      return ReactDOM.createPortal(this.props.isOpen ? this.props.children : null, this.el);\n    }\n\n  }\n\n  return React.forwardRef((props, ref) => {\n    return React.createElement(Overlay, Object.assign({}, props, {\n      forwardedRef: ref\n    }));\n  });\n};","map":{"version":3,"sources":["../../src/react-component-lib/createOverlayComponent.tsx"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __rest = (this && this.__rest) || function (s, e) {\n    var t = {};\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n        t[p] = s[p];\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\n                t[p[i]] = s[p[i]];\n        }\n    return t;\n};\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport { attachProps } from './utils';\nexport const createOverlayComponent = (displayName, controller) => {\n    const didDismissEventName = `on${displayName}DidDismiss`;\n    const didPresentEventName = `on${displayName}DidPresent`;\n    const willDismissEventName = `on${displayName}WillDismiss`;\n    const willPresentEventName = `on${displayName}WillPresent`;\n    class Overlay extends React.Component {\n        constructor(props) {\n            super(props);\n            this.el = document.createElement('div');\n            this.handleDismiss = this.handleDismiss.bind(this);\n        }\n        static get displayName() {\n            return displayName;\n        }\n        componentDidMount() {\n            if (this.props.isOpen) {\n                this.present();\n            }\n        }\n        componentWillUnmount() {\n            if (this.overlay) {\n                this.overlay.dismiss();\n            }\n        }\n        handleDismiss(event) {\n            if (this.props.onDidDismiss) {\n                this.props.onDidDismiss(event);\n            }\n            if (this.props.forwardedRef) {\n                this.props.forwardedRef.current = undefined;\n            }\n        }\n        componentDidUpdate(prevProps) {\n            return __awaiter(this, void 0, void 0, function* () {\n                if (this.overlay) {\n                    attachProps(this.overlay, this.props, prevProps);\n                }\n                if (prevProps.isOpen !== this.props.isOpen && this.props.isOpen === true) {\n                    this.present(prevProps);\n                }\n                if (this.overlay && prevProps.isOpen !== this.props.isOpen && this.props.isOpen === false) {\n                    yield this.overlay.dismiss();\n                }\n            });\n        }\n        present(prevProps) {\n            return __awaiter(this, void 0, void 0, function* () {\n                const _a = this.props, { children, isOpen, onDidDismiss, onDidPresent, onWillDismiss, onWillPresent } = _a, cProps = __rest(_a, [\"children\", \"isOpen\", \"onDidDismiss\", \"onDidPresent\", \"onWillDismiss\", \"onWillPresent\"]);\n                const elementProps = Object.assign(Object.assign({}, cProps), { ref: this.props.forwardedRef, [didDismissEventName]: this.handleDismiss, [didPresentEventName]: (e) => this.props.onDidPresent && this.props.onDidPresent(e), [willDismissEventName]: (e) => this.props.onWillDismiss && this.props.onWillDismiss(e), [willPresentEventName]: (e) => this.props.onWillPresent && this.props.onWillPresent(e) });\n                this.overlay = yield controller.create(Object.assign(Object.assign({}, elementProps), { component: this.el, componentProps: {} }));\n                if (this.props.forwardedRef) {\n                    this.props.forwardedRef.current = this.overlay;\n                }\n                attachProps(this.overlay, elementProps, prevProps);\n                yield this.overlay.present();\n            });\n        }\n        render() {\n            return ReactDOM.createPortal(this.props.isOpen ? this.props.children : null, this.el);\n        }\n    }\n    return React.forwardRef((props, ref) => {\n        return React.createElement(Overlay, Object.assign({}, props, { forwardedRef: ref }));\n    });\n};\n//# sourceMappingURL=createOverlayComponent.js.map"]},"metadata":{},"sourceType":"module"}