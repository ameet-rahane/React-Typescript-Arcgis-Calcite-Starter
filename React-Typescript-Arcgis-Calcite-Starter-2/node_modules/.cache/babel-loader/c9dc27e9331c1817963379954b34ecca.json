{"ast":null,"code":"import React from 'react'; // The comma in the type is to trick typescript because it things a single generic in a tsx file is jsx\n\nexport const mergeRefs = (...refs) => value => refs.forEach(ref => {\n  if (typeof ref === 'function') {\n    ref(value);\n  } else if (ref != null) {\n    // This is typed as readonly so we need to allow for override\n    ref.current = value;\n  }\n});\nexport const createForwardRef = (ReactComponent, displayName) => {\n  const forwardRef = (props, ref) => {\n    return React.createElement(ReactComponent, Object.assign({}, props, {\n      forwardedRef: ref\n    }));\n  };\n\n  forwardRef.displayName = displayName;\n  return React.forwardRef(forwardRef);\n};\nexport * from './attachProps';\nexport * from './case';","map":{"version":3,"sources":["../../../src/react-component-lib/utils/index.tsx"],"names":[],"mappings":"AAAA,OAAO,KAAP,MAAkB,OAAlB,C,CAUA;;AACA,OAAO,MAAM,SAAS,GAAG,CAAe,GAAG,IAAlB,KACvB,KAD4E,IAG5E,IAAI,CAAC,OAAL,CAAc,GAAD,IAAQ;AACnB,MAAI,OAAO,GAAP,KAAe,UAAnB,EAA+B;AAC7B,IAAA,GAAG,CAAC,KAAD,CAAH;AACD,GAFD,MAEO,IAAI,GAAG,IAAI,IAAX,EAAiB;AACtB;AACC,IAAA,GAA6C,CAAC,OAA9C,GAAwD,KAAxD;AACF;AACF,CAPD,CAHK;AAYP,OAAO,MAAM,gBAAgB,GAAG,CAC9B,cAD8B,EAE9B,WAF8B,KAG5B;AACF,QAAM,UAAU,GAAG,CACjB,KADiB,EAEjB,GAFiB,KAGf;AACF,WAAO,KAAA,CAAA,aAAA,CAAC,cAAD,EAAe,MAAA,CAAA,MAAA,CAAA,EAAA,EAAK,KAAL,EAAU;AAAE,MAAA,YAAY,EAAE;AAAhB,KAAV,CAAf,CAAP;AACD,GALD;;AAMA,EAAA,UAAU,CAAC,WAAX,GAAyB,WAAzB;AAEA,SAAO,KAAK,CAAC,UAAN,CAAiB,UAAjB,CAAP;AACD,CAbM;AAeP,cAAc,eAAd;AACA,cAAc,QAAd","sourceRoot":"","sourcesContent":["import React from 'react';\n// The comma in the type is to trick typescript because it things a single generic in a tsx file is jsx\nexport const mergeRefs = (...refs) => (value) => refs.forEach((ref) => {\n    if (typeof ref === 'function') {\n        ref(value);\n    }\n    else if (ref != null) {\n        // This is typed as readonly so we need to allow for override\n        ref.current = value;\n    }\n});\nexport const createForwardRef = (ReactComponent, displayName) => {\n    const forwardRef = (props, ref) => {\n        return React.createElement(ReactComponent, Object.assign({}, props, { forwardedRef: ref }));\n    };\n    forwardRef.displayName = displayName;\n    return React.forwardRef(forwardRef);\n};\nexport * from './attachProps';\nexport * from './case';\n//# sourceMappingURL=index.js.map"]},"metadata":{},"sourceType":"module"}