"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = void 0;

var _react = _interopRequireDefault(require("react"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }

function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }

function _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }

function _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }

var WrenchIcon = function WrenchIcon(_ref) {
  var _ref$color = _ref.color,
      color = _ref$color === void 0 ? 'currentColor' : _ref$color,
      _ref$size = _ref.size,
      size = _ref$size === void 0 ? 24 : _ref$size,
      className = _ref.className,
      children = _ref.children,
      props = _objectWithoutProperties(_ref, ["color", "size", "className", "children"]);

  var classes = 'calcite-icon';
  if (className) classes += " ".concat(className);

  if (size <= 16) {
    return /*#__PURE__*/_react["default"].createElement("svg", _extends({}, props, {
      width: size,
      height: size,
      fill: color,
      viewBox: "0 0 16 16",
      className: classes
    }), /*#__PURE__*/_react["default"].createElement("path", {
      d: "M.646 15.34a2.201 2.201 0 0 0 3.133-.02l7.4-8.296c.244-.215.332-.208.343-.205a3.35 3.35 0 0 0 2.921-.447 4.861 4.861 0 0 0 1.649-3.075.592.592 0 0 0-.11-.454l-.18-.163a.603.603 0 0 0-.687.044l-2.124 1.65-.85-.631-.411-1.052 2.138-1.661a.582.582 0 0 0 .224-.572.64.64 0 0 0-.135-.303l-.192-.182-.185-.027a4.674 4.674 0 0 0-3.387.81 3.384 3.384 0 0 0-.917 3.972C7.846 6.054.746 12.136.645 12.225a2.206 2.206 0 0 0 0 3.115zm.677-2.382c.32-.273 7.82-6.698 8.804-7.657a.7.7 0 0 0 .14-.808 2.402 2.402 0 0 1 .54-2.948 3.367 3.367 0 0 1 1.542-.6l-1.376 1.068a.757.757 0 0 0-.244.868l.527 1.337a.886.886 0 0 0 .09.149l1.2.923a.74.74 0 0 0 .907-.008l1.353-1.051a3.463 3.463 0 0 1-.976 1.352 2.38 2.38 0 0 1-2.083.262 1.455 1.455 0 0 0-1.272.472l-7.422 8.316a1.231 1.231 0 0 1-1.7 0 1.2 1.2 0 0 1-.03-1.675zM3 14H2v-1h1z"
    }));
  }

  if (size <= 24) {
    return /*#__PURE__*/_react["default"].createElement("svg", _extends({}, props, {
      width: size,
      height: size,
      fill: color,
      viewBox: "0 0 24 24",
      className: classes
    }), /*#__PURE__*/_react["default"].createElement("path", {
      d: "M1 19.894a3.1 3.1 0 0 0 3.098 3.102 3.149 3.149 0 0 0 2.232-.933l10.268-11.938a1.451 1.451 0 0 1 .535-.343.898.898 0 0 1 .088 0 3.932 3.932 0 0 0 3.668-.573 6.235 6.235 0 0 0 2.106-3.958.621.621 0 0 0-.108-.442l-.113-.141-.11-.06a.647.647 0 0 0-.704.06l-2.88 2.239-1.244-.927-.6-1.531 2.889-2.245a.652.652 0 0 0 .237-.644l-.045-.17-.073-.096a.638.638 0 0 0-.42-.241 6.047 6.047 0 0 0-4.32 1.032 4.209 4.209 0 0 0-1.222 4.789 6.976 6.976 0 0 1-.44.593L1.91 17.697A3.085 3.085 0 0 0 1 19.895zm1.588-1.463L14.55 8.168a5.545 5.545 0 0 0 .734-1.037l.099-.204-.09-.208a3.239 3.239 0 0 1 .824-3.844 4.799 4.799 0 0 1 2.632-.87l-2.228 1.732a.84.84 0 0 0-.264.957l.679 1.73a.752.752 0 0 0 .093.163l1.562 1.203a.815.815 0 0 0 .997-.012l2.202-1.712a4.94 4.94 0 0 1-1.516 2.353 2.904 2.904 0 0 1-2.79.396l-.124-.026a2.42 2.42 0 0 0-.28-.006 2.169 2.169 0 0 0-1.194.642L5.597 21.383A2.108 2.108 0 0 1 2 19.894a2.082 2.082 0 0 1 .588-1.463zM4.1 21h.8A1.101 1.101 0 0 0 6 19.9v-.8A1.101 1.101 0 0 0 4.9 18h-.8A1.101 1.101 0 0 0 3 19.1v.8A1.101 1.101 0 0 0 4.1 21zM4 19.1a.1.1 0 0 1 .1-.1h.8a.1.1 0 0 1 .1.1v.8a.1.1 0 0 1-.1.1h-.8a.1.1 0 0 1-.1-.1z"
    }));
  }

  return /*#__PURE__*/_react["default"].createElement("svg", _extends({}, props, {
    width: size,
    height: size,
    fill: color,
    viewBox: "0 0 32 32",
    className: classes
  }), /*#__PURE__*/_react["default"].createElement("path", {
    d: "M23.875 8.884l-.938-2.327 4.145-3.224a.67.67 0 0 0 .264-.677l-.051-.215-.09-.11a.695.695 0 0 0-.441-.251 8.172 8.172 0 0 0-5.858 1.395 5.627 5.627 0 0 0-1.68 6.3l-.008.035a4.82 4.82 0 0 1-.769 1.144L3.124 24.33a3.957 3.957 0 0 0 .002 5.522A3.793 3.793 0 0 0 5.851 31a3.81 3.81 0 0 0 2.75-1.175L21.81 14.193a1.86 1.86 0 0 1 .771-.485 2.076 2.076 0 0 1 .366.022 5.244 5.244 0 0 0 5.196-.662 8.46 8.46 0 0 0 2.85-5.36.692.692 0 0 0-.126-.506l-.123-.138-.09-.054a.698.698 0 0 0-.786.056l-4.074 3.232zm5.992-.55a7.24 7.24 0 0 1-2.339 3.945 4.263 4.263 0 0 1-4.266.5l-.118-.031a3.31 3.31 0 0 0-.617-.038 2.616 2.616 0 0 0-1.435.79L7.862 29.152a2.803 2.803 0 0 1-2.01.848H5.85a2.802 2.802 0 0 1-2.012-.849 2.946 2.946 0 0 1-.03-4.093l15.354-13.409a5.294 5.294 0 0 0 1.018-1.57 1.989 1.989 0 0 0 .054-.288l.015-.118-.04-.112a4.648 4.648 0 0 1 1.31-5.297A6.938 6.938 0 0 1 25.627 3c.083 0 .166.001.25.004L22.321 5.77a.968.968 0 0 0-.306 1.105l.937 2.393a.904.904 0 0 0 .107.19.856.856 0 0 0 .195.193l1.938 1.446a.937.937 0 0 0 1.147-.018zM6.501 25H5.5a1.499 1.499 0 0 0-1.499 1.495L4 27.505a1.502 1.502 0 0 0 1.5 1.497l1.009-.001a1.503 1.503 0 0 0 1.495-1.504l-.003-1A1.5 1.5 0 0 0 6.501 25zm.005 3l-1.006.002a.5.5 0 0 1-.5-.5l.001-1.004A.5.5 0 0 1 5.5 26h1.001a.5.5 0 0 1 .5.5l.003.999a.502.502 0 0 1-.498.501z"
  }));
};

var _default = WrenchIcon;
exports["default"] = _default;