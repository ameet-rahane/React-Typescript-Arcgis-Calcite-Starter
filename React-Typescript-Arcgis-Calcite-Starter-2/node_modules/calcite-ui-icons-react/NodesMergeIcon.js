"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = void 0;

var _react = _interopRequireDefault(require("react"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }

function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }

function _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }

function _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }

var NodesMergeIcon = function NodesMergeIcon(_ref) {
  var _ref$color = _ref.color,
      color = _ref$color === void 0 ? 'currentColor' : _ref$color,
      _ref$size = _ref.size,
      size = _ref$size === void 0 ? 24 : _ref$size,
      className = _ref.className,
      children = _ref.children,
      props = _objectWithoutProperties(_ref, ["color", "size", "className", "children"]);

  var classes = 'calcite-icon';
  if (className) classes += " ".concat(className);

  if (size <= 16) {
    return /*#__PURE__*/_react["default"].createElement("svg", _extends({}, props, {
      width: size,
      height: size,
      fill: color,
      viewBox: "0 0 16 16",
      className: classes
    }), /*#__PURE__*/_react["default"].createElement("path", {
      d: "M.754 15.954l5.513-5.514a2.99 2.99 0 0 0 4.173-4.173L15.954.754l-.707-.707L9.733 5.56A2.99 2.99 0 0 0 5.56 9.733L.046 15.246zM8 6a2 2 0 1 1-2 2 2.002 2.002 0 0 1 2-2z"
    }));
  }

  if (size <= 24) {
    return /*#__PURE__*/_react["default"].createElement("svg", _extends({}, props, {
      width: size,
      height: size,
      fill: color,
      viewBox: "0 0 24 24",
      className: classes
    }), /*#__PURE__*/_react["default"].createElement("path", {
      d: "M22.246 1.046L14.44 8.853A3.96 3.96 0 0 0 12 8a4.004 4.004 0 0 0-4 4 3.96 3.96 0 0 0 .853 2.44l-7.807 7.806.707.707 7.807-7.806A3.96 3.96 0 0 0 12 16a4.004 4.004 0 0 0 4-4 3.96 3.96 0 0 0-.853-2.44l7.807-7.806zM12 15a3 3 0 1 1 3-3 3.003 3.003 0 0 1-3 3z"
    }));
  }

  return /*#__PURE__*/_react["default"].createElement("svg", _extends({}, props, {
    width: size,
    height: size,
    fill: color,
    viewBox: "0 0 32 32",
    className: classes
  }), /*#__PURE__*/_react["default"].createElement("path", {
    d: "M29.954 2.754l-.707-.707-9.518 9.517a5.794 5.794 0 0 0-8.165 8.165l-9.518 9.517.707.707 9.518-9.517a5.794 5.794 0 0 0 8.165-8.165zM16 20.8a4.8 4.8 0 1 1 4.8-4.8 4.805 4.805 0 0 1-4.8 4.8z"
  }));
};

var _default = NodesMergeIcon;
exports["default"] = _default;